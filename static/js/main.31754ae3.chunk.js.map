{"version":3,"sources":["Components/images/me_and_soju.jpg","Components/Tab.js","Components/Tablist.js","Components/About.js","Components/Experiences.js","Components/Gallery.js","Components/Contact.js","Components/Body.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Tab","addStyling","props","tab","id","activeTab","onClick","this","changeTab","bind","className","title","Component","Tablist","tabs","map","indtab","About","class","src","Prof","width","height","Experiences","Gallery","Contact","Body","displayContent","activePage","App","state","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,yC,qLCe5BC,EAbf,4MACEC,WAAa,WACX,GAAG,EAAKC,MAAMC,IAAIC,KAAO,EAAKF,MAAMG,UAClC,MAAO,UAHb,uDAOI,OACO,wBAAIC,QAASC,KAAKL,MAAMM,UAAUC,KAAKF,KAAMA,KAAKL,MAAMC,IAAIC,IAAKM,UAAYH,KAAKN,cAAlF,IAAiG,2BAAG,8BAAOM,KAAKL,MAAMC,IAAIQ,aARrI,GAAyBC,aCiBVC,EAhBf,uKACY,IAAD,OACDV,EAAMI,KAAKL,MAAMY,KAAKC,KAAI,SAACC,GAAD,OAC9B,kBAAC,EAAD,CAAKb,IAAKa,EACVR,UAAW,EAAKN,MAAMM,UACtBH,UAAW,EAAKH,MAAMG,eACxB,OACI,wBAAID,GAAG,gBACJD,OARX,GAA6BS,a,gBCARK,E,uKAEb,OACE,yBAAKC,MAAM,QACP,6BACE,8CAGF,6BACE,6BACE,yBAAKC,IAAKC,IACNF,MAAQ,MACRG,MAAQ,MACRC,OAAS,SAEb,2BACE,6BACA,6BAFF,mCAIE,6BACA,6BALF,kC,GAfiBV,aCDdW,E,uKAEb,OACI,gD,GAH6BX,aCApBY,E,uKAEb,OACI,4C,GAHyBZ,aCAhBa,E,uKAEb,OACI,4C,GAHyBb,aCyBtBc,EArBf,4MACEC,eAAiB,WACf,IAAIC,EAAa,EAAK1B,MAAMG,UAC5B,OAAmB,IAAfuB,EACK,kBAAC,EAAD,MACiB,IAAfA,EACF,kBAAC,EAAD,MACiB,IAAfA,EACF,kBAAC,EAAD,MAEA,kBAAC,EAAD,OAVb,uDAcI,OACErB,KAAKoB,qBAfX,GAA0Bf,aC+CXiB,G,MAhDf,kDACE,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXzB,UAAW,GAEb,EAAKG,UAAY,SAACJ,GAChB,EAAK2B,SAAS,CACZ1B,UAAWD,KAPJ,EADf,qDAiCI,OACE,yBAAKM,UAAU,QACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CAASA,UAAU,MAAMI,KArBlB,CACX,CACEV,GAAI,EACJO,MAAO,SAET,CACEP,GAAG,EACHO,MAAO,eAET,CACEP,GAAG,EACHO,MAAQ,WAEV,CACEP,GAAI,EACJO,MAAO,YAOLH,UAAWD,KAAKC,UAChBH,UAAWE,KAAKuB,MAAMzB,aAExB,yBAAKK,UAAY,aACf,kBAAC,EAAD,CAAML,UAAWE,KAAKuB,MAAMzB,kBAzCtC,GAAyBO,cCOLoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.31754ae3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me_and_soju.9172f3d3.jpg\";","import React, {Component} from 'react';\r\n\r\nexport class Tab extends Component {\r\n  addStyling = () => {\r\n    if(this.props.tab.id === this.props.activeTab){\r\n      return 'active'\r\n      }\r\n    }\r\n  render() {\r\n    return (\r\n           <li onClick={this.props.changeTab.bind(this, this.props.tab.id)} className= {this.addStyling()}> <a><span>{this.props.tab.title}</span></a></li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;\r\n","import React, { Component } from 'react';\r\nimport Tab from './Tab';\r\n\r\nexport class Tablist extends Component {\r\n  render() {\r\n    const tab = this.props.tabs.map((indtab) => (\r\n      <Tab tab={indtab}\r\n      changeTab={this.props.changeTab}\r\n      activeTab={this.props.activeTab}/> ));\r\n    return (\r\n        <ul id=\"nav-bar-list\">\r\n          {tab}\r\n        </ul>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Tablist;\r\n","import React, { Component } from 'react'\r\nimport Prof from './images/me_and_soju.jpg'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n          <div class=\"home\">\r\n              <div>\r\n                <h1> Adil Truong </h1>\r\n              </div>\r\n\r\n              <div>\r\n                <div>\r\n                  <img src={Prof}\r\n                      class = \"pic\"\r\n                      width = \"400\"\r\n                      height = \"auto\"\r\n                  />\r\n                  <p>\r\n                    <br />\r\n                    <br />\r\n                    Hi! I'm Adil, a 4th year at UCSB\r\n                    <br />\r\n                    <br />\r\n                    Welcome to my portfolio\r\n                  </p>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Experiences extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Experiences\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Gallery extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Gallery\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Contact\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport About from './About';\r\nimport Experiences from './Experiences';\r\nimport Gallery from './Gallery';\r\nimport Contact from './Contact';\r\n\r\nexport class Body extends Component {\r\n  displayContent = () => {\r\n    var activePage = this.props.activeTab;\r\n    if (activePage === 1) {\r\n      return <About/>\r\n    } else if (activePage === 2) {\r\n      return <Experiences/>\r\n    } else if (activePage === 3) {\r\n      return <Gallery/>\r\n    } else {\r\n      return <Contact/>\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      this.displayContent()\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React, {Component} from 'react';\nimport Tablist from './Components/Tablist';\nimport Body from './Components/Body';\nimport './App.css'\n\nexport class App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      activeTab: 1\n    }\n    this.changeTab = (id) => {\n      this.setState({\n        activeTab: id\n      })\n    }\n  }\n\n  render(){\n\n    const tabs = [\n      {\n        id: 1,\n        title: 'About'\n      },\n      {\n        id:2,\n        title: 'Experiences'\n      },\n      {\n        id:3,\n        title:  'Gallery'\n      },\n      {\n        id: 4,\n        title: 'Contact'\n      }\n  ]\n    return (\n      <div className=\"body\">\n        <div className=\"nav-bar\">\n          <Tablist className=\"tab\" tabs={tabs}\n          changeTab={this.changeTab}\n          activeTab={this.state.activeTab}/>\n        </div>\n        <div className = \"main-body\">\n          <Body activeTab={this.state.activeTab}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}